#- name: create a root superuser with a random password using many different char sets
#  command: docker-compose exec lava-server lava-server manage createsuperuser --username root --email changeme@nuclearcat.com
#  args:
#     chdir: /root/lava-docker-compose
#     stdin: "{{ lookup('password', '_terms/superuserpasswordfile chars=ascii_letters,digits') }}"

# BLAH! remote module (django_manage) does not support check mode
#- name: Check if django superuser exists
#  django_manage:
#    command: shell -c 'import sys; from django.contrib.auth.models import User; sys.exit(0 if User.objects.filter(username="root").count() > 0 else 1)'
#  register: checksuperuser
#  check_mode: True
#  ignore_errors: True
#  changed_when: False

# This will fail too, cause lava dont have manage.py
#- name: django create superuser
#  django_manage:
#    command: "createsuperuser --noinput --username=root --email=changeme@nuclearcat.com"
#  when: checksuperuser.rc != 0

# This is wrong, we need to know when docker finished setup of lava, somehow
# watch docker-compose logs?
- name: Pause for lava to finish install
  pause:
    minutes: 1

- name: Copy django_create_superuser.py
  ansible.builtin.copy:
    src: ./roles/lava/files/django_create_superuser.py
    dest: /root/

- name: Copy file inside docker container
  command: docker cp django_create_superuser.py lava-docker-compose_lava-server_1:/root
  args:
     chdir: /root

- name: create a root superuser with a random password
  command: docker-compose exec lava-server python3 /root/django_create_superuser.py
  register: superuser_result
  args:
     chdir: /root/lava-docker-compose

- name: save password
  become: false
  local_action: 
    module: copy 
    content: "{{ superuser_result.stdout_lines[0] }}"
    dest: _terms/superuser_password

- name: create a root token
  command: docker-compose exec lava-server lava-server manage tokens add --user root
  register: token_result
  args:
     chdir: /root/lava-docker-compose

- name: save root token
  become: false
  local_action: 
    module: copy 
    content: "{{ token_result.stdout_lines[0] }}"
    dest: _terms/root_token

# This one not sure at all, i doubt executing apt update is good idea inside docker container
- name: apt update for lavacli install
  command: docker-compose exec lava-server apt update
  args:
     chdir: /root/lava-docker-compose

- name: apt update for lavacli install
  command: docker-compose exec lava-server apt install lavacli
  args:
     chdir: /root/lava-docker-compose

- name: apt update for lavacli install
  command: docker-compose exec lava-server lavacli identities add --uri http://lava-server:8000/RPC2 --token {{ token_result.stdout_lines[0] }} --username root default
  args:
     chdir: /root/lava-docker-compose
